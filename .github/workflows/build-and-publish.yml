# Nome do Workflow
name: .NET Build, Pack, and Publish (Linux)

# Gatilho (trigger) do workflow
# Este workflow será executado em cada push na branch 'master'
on:
  push:
    branches: [ master ]

# Definição das permissões necessárias para o token do workflow
permissions:
  contents: write
  packages: write

jobs:
  build-and-publish:
    # O tipo de máquina virtual para executar o job.
    # Usamos ubuntu-latest para um ambiente Linux.
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do código
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configurar o ambiente .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 6.0.x # Altere para a versão do seu projeto, se necessário

      # 3. Restaurar dependências
      - name: Restore dependencies
        run: dotnet restore

      # 4. Compilar o projeto
      - name: Build
        run: dotnet build --configuration Release --no-restore

      # 5. Executar testes
      - name: Test
        run: dotnet test --no-build --verbosity normal

      # 6. Extrair a versão do .csproj
      # Lê o arquivo .csproj para extrair o número da versão e o define como uma variável de ambiente.
      - name: Extract Version from .csproj
        shell: pwsh
        run: |
          $csprojPath = "./SimpleWriteConsole/SimpleWriteConsole.csproj"
          $xml = [xml](Get-Content $csprojPath)
          $version = $xml.Project.PropertyGroup.Version
          echo "VERSION=$version" >> $env:GITHUB_ENV
          echo "A versão encontrada foi: $version"

      # 7. Empacotar o projeto (Criar pacote NuGet)
      # O dotnet pack usará automaticamente a tag <Version> do .csproj.
      - name: Pack
        run: dotnet pack --configuration Release --no-build -o ./packages

      # 8. Publicar o executável para Linux
      - name: Publish Application
        run: dotnet publish ./SimpleWriteConsole/SimpleWriteConsole.csproj --configuration Release --runtime linux-x64 --no-build -o ./publish

      # 9. Compactar os artefatos de publicação usando zip
      - name: Archive publish folder
        run: |
          cd ./publish
          zip -r ../SimpleWriteConsole-linux-x64.zip .

      # 10. Publicar no GitHub Packages
      - name: Push to GitHub Packages
        run: dotnet nuget push "./packages/*.nupkg" --api-key ${{ secrets.GITHUB_TOKEN }} --source "https://nuget.pkg.github.com/rcoliveira2016" --skip-duplicate

      # 11. Criar a Release no GitHub
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release ${{ env.VERSION }} (Linux)
          body: "Release automática da versão ${{ env.VERSION }} gerada pelo GitHub Actions para Linux."
          files: ./SimpleWriteConsole-linux-x64.zip

